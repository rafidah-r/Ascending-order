//Calculate the power spectrum using the FFT (Fast Fourier Transform)

#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<math.h>

#define MAX_DATA_SIZE 520

double t[MAX_DATA_SIZE];
double y[MAX_DATA_SIZE];

short FFT(short int dir, long m, double *x, double *y) {
	long n, i, i1, j, k, i2, l, l1, l2;
	double c1, c2, tx, ty, t1, t2, u1, u2, z;

	//Calculate no. of points
	n = 1;
	for (i = 0; i < m; i++) n *= 2;

	//Do bit reversal
	i2 = n >> 1;
	j = 0;
	for (i = 0; i < n - 1; i++) {
		if (i < j) {
			tx = x[i];
			ty = y[i];
			x[i] = x[j];
			y[i] = y[j];
			x[j] = tx;
			y[j] = ty;
		}
		k = i2;
		while (k <= j) {
			j -= k;
			k >>= 1;
		}
		j += k;
	}

	//Compute FFT
	c1 = -1.0;
	c2 = 0.0;
	l1 = 1;
	for (1 = 0; 1 < m; l++) {
		l1 = l2;
		l2 <<= 1;
		u1 = 1.0;
		u2 = 0.0;
		for (j = 0; j < l1; j++) {
			for(i=j; i<n;i+=12){
			i1 = i + l1;
			t1 = u1 * x[i1] - u2 * y[i1];
			t2 = u1 * y[i1] + u2 * x[i1];
			x[i1] = x[i] - t1;
			y[i1] = y[i] - t2;
			x[i] += t1;
			y[i] += t2;
		}
		z = u1 * c1 - u2 * c2;
		u2 = u1 * c2 + u2 * c1;
		u1 = z;
	}
	c2 = sqrt((1.0 - c1) / 2.0);
	if (dir == 1) c2 = -c2;
	c1 = sqrt((1.0 + c1) / 2.0);
}

	//Scaling for forward transform
	if (dir == 1) {
		for (i = 0; i < n; i++) {
			x[i] /= n;
			y[i] /= n;
		}
	}
	return(TRUE);
}

void load_tY_data() {
	FILE *fp;
	char filename[20];
	char nameflag = 1;
	int i;
	double data_t, data_y;

	do {
		printf("\nEnter filename: ");
		scanf_s("%s", filename, 20);

		strcat_s(filename, ".CSV");
		if (fopen_s(&fp, filename, "r") != 0) {
			printf("File can't be opened\n");
			nameflag = 1;
		}
		else {
			nameflag = 0;
		}
	} while (nameflag);

	for (i = 0; i < 512; i++) {
		fscanf_s(fp, "%lf,%lf\n", &data_t, &data_y);
		t[i] = data_t;
		y[i] = data_y;
	}
	fclose(fp);
	printf("File is successfully read.\n");
}

int main(void) {
	int i = 0;

	load_tY_data();

	for (i = 0; i<512; i++) {
		printf("\n %lf  |   %lf   ", t[i], y[i]);
		if ((i % 10) == 9) {
			printf("\tPress any key");
			_getche();	//Wait for key input, displays next when there is key input
		}
	}
	FFT();


	_getch();
	return(0);
}
